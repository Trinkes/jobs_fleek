services:
  postgres:
    image: postgres:17.5
    restart: always
    container_name: media-postgres
    volumes:
      - media-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_DB=${POSTGRES_DB:-media_db}
    env_file:
      - .env
    ports:
      - '5469:5432'
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"
        ]
      interval: 5s
      timeout: 1m
      retries: 10
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '0.256'
          memory: '512M'
        reservations:
          cpus: '0.256'
          memory: '512M'
  redis:
    image: redis:7.0
    restart: always
    container_name: media-redis
    ports:
      - '6834:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./scripts/localstack:/etc/localstack/init/ready.d"
    env_file:
      - .env
volumes:
  media-db-data:
  media-redis-data:
